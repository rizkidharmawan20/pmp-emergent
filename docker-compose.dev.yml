version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: challenge_platform_db_dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: challenge_platform
    volumes:
      - mongodb_data_dev:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - challenge_network_dev

  # Redis for caching and queues
  redis:
    image: redis:7.2-alpine
    container_name: challenge_platform_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    networks:
      - challenge_network_dev

  # Backend API (Development mode with hot reload)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: challenge_platform_backend_dev
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=mongodb://admin:password123@mongodb:27017/challenge_platform?authSource=admin
      - DB_NAME=challenge_platform
      - JWT_SECRET=dev-secret-key
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - backend_logs_dev:/app/logs
    networks:
      - challenge_network_dev
    command: ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]

  # Frontend Application (Development mode)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: challenge_platform_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
      - NODE_ENV=development
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - challenge_network_dev

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:latest
    container_name: challenge_platform_mongo_express_dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - challenge_network_dev

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: challenge_platform_redis_commander_dev
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - challenge_network_dev

networks:
  challenge_network_dev:
    driver: bridge

volumes:
  mongodb_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  backend_logs_dev:
    driver: local