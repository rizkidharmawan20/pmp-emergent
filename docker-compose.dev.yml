version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: pmp_db_dev
    restart: always
    environment:
      - POSTGRES_USER=pmpuser
      - POSTGRES_PASSWORD=pmppassword
      - POSTGRES_DB=pmpdb_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Map DB port ke host yang berbeda untuk menghindari konflik
    networks:
      - pmp-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pmp_backend_dev
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend/src:/app/src # Mount source code untuk hot-reloading
      - ./backend/prisma:/app/prisma
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://pmpuser:pmppassword@db:5432/pmpdb_dev
      - JWT_SECRET=your-dev-jwt-key
      - JWT_EXPIRES_IN=1d
    ports:
      - "5000:5000"
    networks:
      - pmp-network
    command: sh -c "npm install && npx prisma db push && npm run dev" # Gunakan nodemon

  frontend:
    build:
      context: ./frontend
    container_name: pmp_frontend_dev
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:5000
    networks:
      - pmp-network

networks:
  pmp-network:
    driver: bridge

volumes:
  postgres_dev_data: